
  Id     Duration CommandLine
  --     -------- -----------
   1     1:13.760 brew upgrade --cask powershell-preview
   2        0.693 ls
   3        0.308 clear
   4        0.063 history
   5        0.077 Get-ChildItem
   6        0.208 ls
   7        0.104 ls
   8        0.146 Get-ChildItem
   9        0.057 Get-help
  10        0.050 New-Item -ItemType File newfile
  11        0.043 history >> powerHistory
  12        0.282 cat ./powerHistory
  13        0.005 echo "comsys" > ./newfile
  14        0.131 ls
  15        0.189 claer
  16        0.090 clear
  17        0.020 Get-ChildItem
  18        0.112 mkdir comsys
  19        0.101 mv ./newfile ./comsys/
  20        0.094 mv ./powerHistory ./comsys/
  21        0.078 claar
  22        0.083 clear
  23        0.005 cd ./comsys/
  24        0.080 ls
  25        0.018 echo "comsys" > ./newfile2
  26        0.027 Get-ChildItem
  27        0.079 write-host
  28        0.010 write-host I am amazing
  29        0.003 write-host I am wonderfully made
  30        0.003 write-host I am the lover of God
  31        0.396 clear
  32        0.011 write-host "comsys" >> newfile3
  33        0.095 cat ./newfile3
  34        0.025 Get-Content ./newfile3
  35        0.109 Get-Alias
  36        0.002 Write-Output "comsys" >> ./newfile3
  37        0.002 Write-Output "Is good for redarection and on monitor" >> ./newfile3
  38        0.012 Write-Output "Write-Host is not good for redirection" >> ./newfile3
  39        0.327 Clear
  40        0.074 Get-Alias
  41        0.179 clear
  42        0.012 Write-Host "comsys" -ForegroundColor Red
  43        0.024 New-Item -ItemType Directory dirnew
  44        0.035 Get-ChildItem
  45        0.009 cd ./dirnew/
  46        0.006 cd ..
  47        0.004 Set-Location ./dirnew/
  48        0.029 Get-Location
  49        0.006 pwd
  50        0.296 clear
  51        0.008 Push-Location
  52        0.002 echo "Push-Location is stored on a stack, and it remembers my location"
  53        0.003 echo "Push-Location is stored on a stack, and it remembers my location" >> ../powerHistory
  54        0.121 ls
  55        0.010 cd ..
  56        0.085 cd ..
  57        0.012 Pop-Location
  58        0.004 echo "It has got me back using Pop-Location" >> ../powerHistory
  59        0.179 cat ../powerHistory
  60        0.226 history >> ../powerHistory
  61        0.230 cat ../powerHistory
  62        0.038 history > ../powerHistory
  63        0.134 cat ../powerHistory
  64        0.159 Wrie-Output "Programming" >> comsys
  65        0.004 Write-Output "Programming" >> comsys
  66        0.065 claer
  67        0.095 clear
  68        0.010 Write-Output "Programming" >> newfile
  69        0.005 Write-Output "basic math" >> newfile
  70        0.009 echo "Get-Member gives me back what members, methods are on an object" 
  71        0.058 Get-ChildItem | Get-Membe
  72        0.061 Get-ChildItem | Get-Member
  73        0.106 clear
  74        0.038 Get-ChildItem | Measure-Object
  75        0.007 echo "Measure-Object gets the attributes of the objects from output"
  76        0.047 Get-ChildItem | Measure-Object -Property Length
  77        0.040 Get-ChildItem | Measure-Object -Property Length -sum
  78        0.270 ls
  79        0.018 Get-ChildItem
  80        0.010 Get-ChildItem | Measure-Object -Property Length -Maximum
  81        0.032 Get-ChildItem | Measure-Object -Property Length -Maximum -Average
  82        0.350 clear
  83        0.123 Get-ChildItem | Select-Object
  84        0.048 Get-ChildItem | Select-Object -First 1
  85        0.008 echo "It works as head and tail"
  86        0.062 Get-ChildItem | Select-Object -last 1
  87        0.113 Get-ChildItem | Select-Object -Property name, Length
  88        0.098 Select-Object | Measure-Item
  89        0.014 Select-Object | Measure-Object
  90        0.060 Select-Object | Get-Member
  91        0.046 Get-childItem | Where-Object {$_.Length -gt 30}
  92        0.022 Get-ChildItem
  93        0.021 Get-childItem | Where-Object {$_.Length -gt 20}
  94        0.130 Get-Variable
  95        0.010 echo "Gives back the envrionmental variables"
  96        0.006 $a=3
  97        0.007 $a+1
  98        0.015 $a+"3"
  99        0.015 $b=3.14
 100        0.034 $a+$b
 101        0.016 $b+1
 102        0.003 $c="comsys"
 103        0.005 $c+1
 104        0.006 echo Array bellow
 105        0.004 $array=1,2,3,4
 106        0.151 $d[1]
 107        0.026 $array[1]
 108        0.016 $array+=5
 109        0.005 echo "Added as a new element in the array, i.e appended"
 110        0.003 $a+"1"
 111        0.003 $e=@{"cica"="cat";"alma"="apple"}
 112        0.048 $e["cica"]
 113        0.015 echo "The above variable is a dictionary"
 114        0.047 history >> ../powerHistory


  Id     Duration CommandLine
  --     -------- -----------
   1        0.002 history
   2        0.474 ls
   3        0.078 ./first.ps1
   4        0.375 cat ./powerHistory
   5        0.117 clear
   6        0.023 echo "execute a script"
   7        0.009 $b+1
   8        0.007 $fc=get-content ./dirnew/newfile
   9        0.012 $fc[1]
  10        0.043 Get-Date
  11        0.004 echo "this is an object"
  12        0.003 (Get-Date).Day
  13        0.019 (Get-Date).AddDays(7)
  14        0.008 echo "What day it will be after 7 days"
  15        0.129 clear

  66        9.350 install-module posh-ssh
  68        0.084 import-module posh-ssh

  new-sshsession -computerName comsys.inf.elte.hu
  invoke-sshcommand -sessionid 0 -command ls
  get-credential 
  Get-scpItem -computerName comsys.inf.elte.hu -credential $scred -path .profile -pathType File -destination ./